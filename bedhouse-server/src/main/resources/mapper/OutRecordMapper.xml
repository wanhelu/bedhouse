<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.bedhouseserver.mapper.OutRecordMapper">
  <resultMap id="BaseResultMap" type="com.example.bedhouseserver.POJO.OutRecord">
      <!--
        WARNING - @mbggenerated
        This element is automatically generated by MyBatis Generator, do not modify.
      -->
      <id column="id" jdbcType="INTEGER" property="id"/>
      <result column="stf_id" jdbcType="INTEGER" property="stfId"/>
      <result column="customer_id" jdbcType="INTEGER" property="customerId"/>
      <result column="submit_time" jdbcType="TIMESTAMP" property="submitTime"/>
      <result column="out_time" jdbcType="TIMESTAMP" property="outTime"/>
      <result column="forcast_bac" jdbcType="TIMESTAMP" property="forcastBac"/>
      <result column="back_time" jdbcType="TIMESTAMP" property="backTime"/>
      <result column="text" jdbcType="VARCHAR" property="text"/>
      <result column="state" jdbcType="BIGINT" property="state"/>
      <result column="checker_id" jdbcType="INTEGER" property="checkerId"/>
      <result column="check_time" jdbcType="TIMESTAMP" property="checkTime"/>
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, stf_id, customer_id, submit_time, out_time, forcast_bac, back_time, text, state, 
    checker_id, check_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from out_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from out_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.bedhouseserver.POJO.OutRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
      insert into out_record (id, stf_id, customer_id,
      submit_time, out_time, forcast_bac,
      back_time, text, state,
      checker_id, check_time)
      values (#{id,jdbcType=INTEGER}, #{stfId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER},
      #{submitTime,jdbcType=TIMESTAMP}, #{outTime,jdbcType=TIMESTAMP}, #{forcastBac,jdbcType=TIMESTAMP},
      #{backTime,jdbcType=TIMESTAMP}, #{text,jdbcType=VARCHAR}, #{state,jdbcType=BIGINT},
      #{checkerId,jdbcType=INTEGER}, #{checkTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.bedhouseserver.POJO.OutRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into out_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stfId != null">
        stf_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="submitTime != null">
        submit_time,
      </if>
      <if test="outTime != null">
        out_time,
      </if>
      <if test="forcastBac != null">
        forcast_bac,
      </if>
      <if test="backTime != null">
        back_time,
      </if>
      <if test="text != null">
        text,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="checkerId != null">
        checker_id,
      </if>
      <if test="checkTime != null">
        check_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stfId != null">
        #{stfId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="submitTime != null">
          #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outTime != null">
          #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="forcastBac != null">
          #{forcastBac,jdbcType=TIMESTAMP},
      </if>
      <if test="backTime != null">
          #{backTime,jdbcType=TIMESTAMP},
      </if>
      <if test="text != null">
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=BIGINT},
      </if>
      <if test="checkerId != null">
        #{checkerId,jdbcType=INTEGER},
      </if>
      <if test="checkTime != null">
          #{checkTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.bedhouseserver.POJO.OutRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update out_record
    <set>
      <if test="stfId != null">
        stf_id = #{stfId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="submitTime != null">
          submit_time = #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outTime != null">
          out_time = #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="forcastBac != null">
          forcast_bac = #{forcastBac,jdbcType=TIMESTAMP},
      </if>
      <if test="backTime != null">
          back_time = #{backTime,jdbcType=TIMESTAMP},
      </if>
      <if test="text != null">
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=BIGINT},
      </if>
      <if test="checkerId != null">
        checker_id = #{checkerId,jdbcType=INTEGER},
      </if>
      <if test="checkTime != null">
          check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.bedhouseserver.POJO.OutRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
      update out_record
      set stf_id = #{stfId,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      submit_time = #{submitTime,jdbcType=TIMESTAMP},
      out_time = #{outTime,jdbcType=TIMESTAMP},
      forcast_bac = #{forcastBac,jdbcType=TIMESTAMP},
      back_time = #{backTime,jdbcType=TIMESTAMP},
      text = #{text,jdbcType=VARCHAR},
      state = #{state,jdbcType=BIGINT},
      checker_id = #{checkerId,jdbcType=INTEGER},
      check_time = #{checkTime,jdbcType=TIMESTAMP}
      where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="allInfo" resultMap="BaseResultMap">
        select *
        from out_record
    </select>
    <select id="searchByString" resultMap="BaseResultMap">
        select * from out_record
        <trim prefixOverrides="and" suffixOverrides="and" prefix="where">
            <if test="Date!=null">
                (
                date(submit_time)=#{Date}
                or
                date(out_time)=#{Date}
                or
                date(forcast_bac)=#{Date}
                or
                date(back_time)=#{Date}
                or
                date(check_time)=#{Date}
                )
            </if>
            and
            <if test="word!=null">
                (
                text like CONCAT('%',#{word},'%')
                )
            </if>
        </trim>
    </select>
    <select id="searchByNum" resultMap="BaseResultMap">
        select * from out_record
        <trim prefixOverrides="and" suffixOverrides="and" prefix="where">
            <if test="Date!=null">
                (
                date(submit_time)=#{Date}
                or
                date(out_time)=#{Date}
                or
                date(forcast_bac)=#{Date}
                or
                date(back_time)=#{Date}
                or
                date(check_time)=#{Date}
                )
            </if>
            and
            <if test="num!=null">
                (
                id=#{num}
                or
                stf_id=#{num}
                or
                customer_id=#{num}
                or
                state=#{num}
                or
                checker_id=#{num}
                )
            </if>
        </trim>
    </select>
    <select id="allNoCheckedInfo" resultMap="BaseResultMap">
        select *
        from out_record
        where state = 1
    </select>
    <select id="searchNoCheckedByString" resultMap="BaseResultMap">
        select * from out_record
        <trim prefixOverrides="and" suffixOverrides="and" prefix="where">
            <if test="Date!=null">
                (
                date(submit_time)=#{Date}
                or
                date(out_time)=#{Date}
                or
                date(forcast_bac)=#{Date}
                or
                date(back_time)=#{Date}
                or
                date(check_time)=#{Date}
                )
            </if>
            <if test="word!=null">
                and
                (
                text like CONCAT('%',#{word},'%')
                )
            </if>
            and state=1
        </trim>
    </select>
    <select id="searchNoCheckedByNum" resultMap="BaseResultMap">
        select * from out_record
        <trim prefixOverrides="and" suffixOverrides="and" prefix="where">
            <if test="Date!=null">
                (
                date(submit_time)=#{Date}
                or
                date(out_time)=#{Date}
                or
                date(forcast_bac)=#{Date}
                or
                date(back_time)=#{Date}
                or
                date(check_time)=#{Date}
                )
            </if>
            and
            <if test="num!=null">
                (
                id=#{num}
                or
                stf_id=#{num}
                or
                customer_id=#{num}
                or
                state=#{num}
                or
                checker_id=#{num}
                )
            </if>
            and state=1
        </trim>
    </select>
</mapper>